{"version":3,"sources":["serviceWorker.js","components/PosterCarouselItem.js","components/Arrows.js","components/PosterCarousel.js","components/Trending.js","components/Movies.js","components/Search.js","components/Header.js","components/Footer.js","components/Tv.js","components/TopCard.js","components/TrailerCarousel.js","components/PersonCarousel.js","components/MovieInfo.js","components/TvInfo.js","components/NotFound.js","components/App.js","components/ScrollToTop.js","index.js"],"names":["Boolean","window","location","hostname","match","PosterCarouselItem","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleMouseEnter","setState","hover","handleMouseLeave","componentWillMount","props","media","name","date","path","state","render","posterSrc","item","poster_path","react_default","a","createElement","Link","to","id","replace","onClick","hideSearch","onMouseEnter","onMouseLeave","className","src","alt","title","concat","substring","PureComponent","withRouter","PrevArrow","_ref","react_fontawesome_lib_default","NextArrow","_ref2","PosterCarousel","handleGetData","endpoint","axios","get","then","response","data","results","catch","error","console","log","handleMouseHover","prevState","handleCalculateSlides","innerWidth","handleUpdateSlides","slides","componentDidMount","addEventListener","componentDidUpdate","_this2","settings","initialSlide","dots","infinite","speed","slidesToShow","slidesToScroll","accesibility","adaptiveHeight","arrows","autoplay","centerPadding","cssEase","easing","edgeFriction","fade","focusOnSelect","swipe","nextArrow","Arrows_NextArrow","prevArrow","Arrows_PrevArrow","length","category","lib_default","map","overview","components_PosterCarouselItem","key","Trending","format","_settings","defineProperty","backdropSrc","backdrop_path","Movies","components_Trending","assign","components_PosterCarousel","Search","searchInput","React","createRef","query","handleInputChange","e","target","value","searchVisible","searchQuery","handleFocusIn","searchContainerClass","handleFocusOut","handleHide","type","onChange","placeholder","onFocus","onBlur","ref","input","focus","media_type","Header","bg","background","movieClass","tvClass","listenScrollEvent","scrollY","backgroundColor","handleShowSearch","handleHideSearch","handleLinkClass","hash","split","style","components_Search","Footer","href","Tv","TopCard","year","rating","genres","summary","TrailerCarousel","frameborder","allow","allowfullscreen","PersonCarousel","people","profileSrc","profile_path","character","MovieInfo","movie","director","producers","writers","params","handleSetMovie","release_date","vote_average","genre","join","someMethod","forceUpdate","components_TopCard","components_PersonCarousel","components_TrailerCarousel","TvInfo","show","handleSetShow","first_air_date","NotFound","App","components_Header","Switch","Route","exact","Redirect","component","components_Footer","ScrollToTop","prevProps","pathname","scrollTo","children","Component","ReactDOM","HashRouter","components_ScrollToTop","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4dbe7de8.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {PureComponent} from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport axios from 'axios';\n\nclass PosterCarouselItem extends PureComponent {\n  \n  constructor() {\n        super();\n        this.state = {\n      name: \"name\",\n      date: \"irst_air_date\",\n      hover: false,\n      render: 0,\n      path: \"/tv\"\n    }\n  }\n  \n  /*Methods*/\n  \n  handleMouseEnter = () => {\n        this.setState({\n            hover: true\n        });\n  }\n  \n  handleMouseLeave = () => {\n        this.setState({\n            hover: false\n        });\n  }\n  \n  /*Mount*/\n  componentWillMount = () => {\n    \n    /*Use correct attributes for movies or tv shows*/\n    if (this.props.media == \"movie\") {\n      this.setState({\n        name: \"title\",\n        date: \"release_date\",\n        path: \"/movies\"\n      });\n    }\n    else if (this.props.media == \"tv\") {\n      this.setState({\n        name: \"name\",\n        date: \"first_air_date\",\n        path: \"/tv\"\n      });\n    }\n  }\n  \n  render() {\n    \n    /*If image src is found, use it instead of default*/\n    \n    let posterSrc = \"https://media.comicbook.com/files/img/default-movie.png\";\n    \n    if (this.props.item.poster_path !== \"\" && this.props.item.poster_path != null) {\n        posterSrc = \"https://image.tmdb.org/t/p/w185_and_h278_bestv2\" + this.props.item.poster_path;\n    }\n    \n        /*Link using id and movie/tv title with only alphanumeric characters and no spaces*/\n    return (\n        <Link\n          to={ this.state.path + '/' + this.props.item.id + '/' + this.props.item[this.state.name].replace(/[^\\w\\s]/gi, '').replace(/\\s/g, '-')}\n          onClick={this.props.hideSearch}\n          >\n          <div \n            onMouseEnter={this.handleMouseEnter}\n            onMouseLeave={this.handleMouseLeave}\n            className=\"carousel-item\"\n          >\n            <img \n                className=\"poster\"\n                src={posterSrc}\n                alt={this.props.item.title}\n            />\n            \n            {/*Hover*/}\n            <div className=\"hover-title\">\n              <h3>\n                {\n                  this.state.hover\n                    ? this.props.item[this.state.name]\n                    : \"\"\n                }\n              </h3>\n              <h3>\n                {\n                  this.state.hover\n                    ? `(${this.props.item[this.state.date].substring(0, 4)})`\n                    : \"\"\n                }\n              </h3>\n            </div>\n          </div>\n        </Link>\n    ); \n  }\n}\n\nexport default withRouter(PosterCarouselItem);","import React from 'react';\nimport FontAwesome from 'react-fontawesome';\n\n/*Previous Arrow*/\nexport const PrevArrow = ({ onClick, hover }) => {\n    if (hover) {\n        return (\n            <div \n            className=\"prev-arrow\"\n            onClick={onClick}\n            >\n                <FontAwesome className=\"arrow-icon\" name=\"chevron-left\" />\n            </div>   \n        );\n    }\n    else {\n        return <div></div>;\n    }\n}\n\n/*Next Arrow*/\nexport const NextArrow = ({ onClick, hover }) => {\n    if (hover) {\n        return (\n            <div \n            className=\"next-arrow\"\n            onClick={onClick}\n            >\n                <FontAwesome className=\"arrow-icon\" name=\"chevron-right\" />\n            </div>   \n        );    \n    }\n    else {\n        return <div></div>;\n    }\n}","import React, {PureComponent} from 'react';\nimport Slider from \"react-slick\";\nimport axios from 'axios';\n\n/*Components*/\nimport PosterCarouselItem from './PosterCarouselItem';\nimport {NextArrow, PrevArrow} from './Arrows.js';\n\nclass PosterCarousel extends PureComponent {\n    constructor() {\n        super();\n        this.state = {\n          data: [],\n          hover: false,\n          slides: this.handleCalculateSlides()\n        }\n    }\n    \n    //Methods\n    handleGetData = (endpoint) => {\n        \n        axios.get(endpoint)\n            .then(response => {\n                 this.setState({\n                    data: response.data.results\n                });\n            })\n            .catch(error => {\n              console.log('Error fetching and parsing data', error);\n            });\n            \n    }\n    \n    handleMouseHover = () => {\n        this.setState(prevState => ({\n            hover: !prevState.hover\n        }));\n    }\n    \n    handleCalculateSlides = () => {\n        if (window.innerWidth <= 650) {\n            return 3;\n        }\n        else if (window.innerWidth <= 850) {\n            return 4;\n        }\n        else if (window.innerWidth <= 1000) {\n            return 5;\n        }\n        else if (window.innerWidth <= 1250 ) {\n            return 6;\n        }\n        else if (window.innerWidth <= 1500) {\n            return 7;\n        }\n        else {\n            return 8;\n        }\n    }\n    \n    handleUpdateSlides = () => {\n        this.setState({slides: this.handleCalculateSlides()});\n    }\n    \n    /*Mount*/\n    componentDidMount = () => {\n        window.addEventListener(\"resize\", this.handleUpdateSlides);\n        \n        this.handleGetData(this.props.endpoint);\n    }\n    \n    /*Update*/\n    componentDidUpdate = () => {\n        this.handleGetData(this.props.endpoint);\n    }\n        \n    render() {\n        \n        /*Slider settings*/\n        const settings = {\n          initialSlide: 0,\n          dots: false,\n          infinite: false,\n          speed: 500,\n          slidesToShow: this.state.slides,\n          slidesToScroll: this.state.slides,\n          accesibility: true,\n          adaptiveHeight: false,\n          arrows: true,\n          autoplay:false,\n          centerPadding: \"60px\",\n          cssEase: \"ease\",\n          easing: \"linear\",\n          edgeFriction: 0.35,\n          fade: false,\n          focusOnSelect: false,\n          swipe: true,\n          nextArrow: <NextArrow hover={this.state.hover} />,\n          prevArrow: <PrevArrow hover={this.state.hover} />\n          \n        };\n        \n        /*If no data is found, load empty div*/\n        if (this.state.data.length > 0) {\n            return (\n                <div \n                    className=\"carousel-container\"\n                    onMouseEnter={this.handleMouseHover}\n                    onMouseLeave={this.handleMouseHover}\n                >\n                    <h1>{this.props.category}</h1>\n                    <Slider \n                        {...settings}\n                    >\n                        {\n                            this.state.data.map(item => {\n                                if (item.overview !==\"\") {\n                                    return(\n                                        <PosterCarouselItem \n                                            item={item}\n                                            key={item.id}\n                                            match={this.props.match}\n                                            media={this.props.media}\n                                        />\n                                    );\n                                }\n                                else {\n                                    return <span />;\n                                }\n                            })\n                        }\n                    </Slider>\n                  </div>\n            );\n        }\n        else {\n            return <div />;\n        }\n    }\n}\n\nexport default PosterCarousel;","import React, { PureComponent } from \"react\";\nimport Slider from \"react-slick\";\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\n/*Components*/\nimport {NextArrow, PrevArrow} from './Arrows.js';\n\nclass Trending extends PureComponent {\n    \n    constructor() {\n        super();\n        this.state = {\n          data: [],\n          name: \"title\",\n          format: \"Movies\",\n          hover: false,\n        }\n    }\n    \n    //Methods\n    handleGetData = (endpoint) => {\n        \n        axios.get(endpoint)\n            .then(response => {\n                 this.setState({\n                    data: response.data.results\n                });\n            })\n            .catch(error => {\n              console.log('Error fetching and parsing data', error);\n            });\n            \n    }\n    \n    handleMouseHover = () => {\n      this.setState(prevState => ({\n          hover: !prevState.hover\n      }));\n    }\n    \n    /*Mount*/\n    componentWillMount = () => {\n        this.handleGetData(this.props.endpoint);\n        \n        /*Use corect attributes for movies or tv*/\n        if (this.props.match.path === \"/movies\") {\n          this.setState({\n            name: \"title\",\n            format: \"Movies\"\n          });\n        }\n        else if (this.props.match.path === \"/tv\") {\n          this.setState({\n            name: \"name\",\n            format: \"TV Shows\"\n          });\n        }\n    }\n    \n  render() {\n    \n    /*Slider settings*/\n    const settings = {\n      dots: false,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      autoplay: true,\n      speed: 2500,\n      autoplaySpeed: 5000,\n      arrows: true,\n      nextArrow: <NextArrow hover={this.state.hover} />,\n      prevArrow: <PrevArrow hover={this.state.hover} />\n    };\n    \n    return (\n      <div \n        onMouseEnter={this.handleMouseHover}\n        onMouseLeave={this.handleMouseHover}\n        className=\"trending-container\"\n      >\n        <Slider {...settings}>\n            {\n                this.state.data.map(item => {\n                \n                    /*If image is not found, use default*/\n                    let backdropSrc = \"https://ak9.picdn.net/shutterstock/videos/14759539/thumb/1.jpg\"\n                \n                    if (item.backdrop_path !== null) {\n                      backdropSrc = \"https://image.tmdb.org/t/p/w1280\" + item.backdrop_path;\n                    }\n                    \n                        /*Link using id and movie/tv title with only alphanumeric characters and no spaces*/\n                    return(\n                        <Link \n                          key={item.id}\n                          to={ this.props.match.path + '/' + item.id + '/' + item[this.state.name].replace(/[^\\w\\s]/gi, '').replace(/\\s/g, '-') }\n                        >\n                            <div className=\"trending-item\">\n                                <img \n                                    className=\"trending-image\"\n                                    src={backdropSrc}\n                                    alt={item[this.state.name]}\n                                />\n                                <div className=\"trending-info\">\n                                    <h3>Popular {this.state.format}</h3>\n                                    <h1>{item[this.state.name]}</h1>\n                                </div>\n                            </div>\n                        </Link>\n                    );\n                })\n            }\n        </Slider>\n      </div>\n    );\n  }\n}\n\nexport default Trending;","import React, {PureComponent} from 'react';\n\n//Components\nimport PosterCarousel from './PosterCarousel';\nimport Trending from './Trending';\n\n\nclass Movies extends PureComponent {\n  \n  render() {\n    \n    const props = {\n      match: this.props.match,\n      media: \"movie\"\n    };\n    \n    return (\n    <div className=\"Movies\">\n      <Trending \n        endpoint=\"https://api.themoviedb.org/3/movie/popular?api_key=9512b36f031887e7c9ad226e2c26a6b2&language=en-US&page=1\"\n        {...props}\n        \n      />\n      \n      {/*Now Playing*/}\n      <PosterCarousel\n          category=\"Now Playing\"\n          endpoint='https://api.themoviedb.org/3/movie/now_playing?api_key=9512b36f031887e7c9ad226e2c26a6b2&language=en-US&page=1'\n          {...props}\n      />\n      \n      {/*Top Rated*/}\n      <PosterCarousel\n          category=\"Top Rated\"\n          endpoint='https://api.themoviedb.org/3/movie/top_rated?api_key=9512b36f031887e7c9ad226e2c26a6b2&language=en-US&page=1'\n          {...props}\n          \n      />\n      \n      {/*Upcoming Movies*/}\n      <PosterCarousel\n          category=\"Upcoming Movies\"\n          endpoint='https://api.themoviedb.org/3/movie/upcoming?api_key=9512b36f031887e7c9ad226e2c26a6b2&language=en-US&page=1' \n          {...props}\n      />\n      \n      {/*Dramas*/}\n      <PosterCarousel\n          category=\"Dramas\"\n          endpoint='https://api.themoviedb.org/3/discover/movie?api_key=9512b36f031887e7c9ad226e2c26a6b2&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_genres=18'\n          {...props}\n      />\n      \n      {/*Thrillers*/}\n      <PosterCarousel\n          category=\"Thrillers\"\n          endpoint='https://api.themoviedb.org/3/discover/movie?api_key=9512b36f031887e7c9ad226e2c26a6b2&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_genres=53&without_genres=35'\n          {...props}\n      />\n      \n      {/*Comedies*/}\n      <PosterCarousel\n          category=\"Comedies\"\n          endpoint='https://api.themoviedb.org/3/discover/movie?api_key=9512b36f031887e7c9ad226e2c26a6b2&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_genres=35&without_genres=53'\n          {...props}\n      />\n      \n      {/*Action Movies*/}\n      <PosterCarousel\n          category=\"Action Movies\"\n          endpoint='https://api.themoviedb.org/3/discover/movie?api_key=9512b36f031887e7c9ad226e2c26a6b2&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_genres=28'\n          {...props}\n      />\n      \n      {/*Horror Movies*/}\n      <PosterCarousel\n          category=\"Horror Movies\"\n          endpoint='https://api.themoviedb.org/3/discover/movie?api_key=9512b36f031887e7c9ad226e2c26a6b2&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_genres=27&without_genres=10751'\n          {...props}\n      />\n      \n      {/*Animated Movies*/}\n      <PosterCarousel\n          category=\"Animated Movies\"\n          endpoint='https://api.themoviedb.org/3/discover/movie?api_key=9512b36f031887e7c9ad226e2c26a6b2&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_genres=16'\n          {...props}\n      />\n    </div>\n    );\n  }\n  \n}\n\nexport default Movies;","import React, { PureComponent } from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport axios from 'axios';\n\n/*Components*/\nimport PosterCarouselItem from './PosterCarouselItem';\n\nclass Search extends PureComponent {\n    constructor() {\n        super();\n        this.state = {\n            query: \"\" ,\n            results: [],\n            searchContainerClass: \"search-input-container\"\n        }\n    }\n    \n    /*Refs*/\n    searchInput = React.createRef()\n    \n    //Methods\n    handleGetData = (endpoint) => {\n        \n        axios.get(endpoint)\n            .then(response => {\n                if (this.state.query.length !== 0) {\n                     this.setState({\n                        results: response.data.results\n                    });\n                }\n                else {\n                    this.setState({\n                        results: []\n                    });\n            }\n            })\n            .catch(error => {\n              console.log('Error fetching and parsing data', error);\n            });\n    }\n    \n    handleInputChange = (e) => {\n        this.setState({\n            query: e.target.value\n        });\n        \n        if (this.props.searchVisible) {\n            console.log(\"searching...\");\n            let searchQuery = this.state.query.replace(' ', '%20');\n            this.handleGetData(`https://api.themoviedb.org/3/search/multi?api_key=9512b36f031887e7c9ad226e2c26a6b2&language=en-US&query=${searchQuery}&page=1&include_adult=false`);\n        }\n    }\n    \n    handleFocusIn = () => {\n        this.setState({searchContainerClass: \"search-input-container active\"});\n    }\n    \n    handleFocusOut = () => {\n        this.setState({searchContainerClass: \"search-input-container\"});\n    }\n    \n    handleHide = () => {\n        this.props.hideSearch();\n        this.setState({\n            query: \"\",\n            results: []\n        })\n    }\n    \n    render () {\n        return (\n          <div className={\"search visible-\" + this.props.searchVisible}>\n            <FontAwesome \n                name=\"times\"\n                onClick={this.handleHide}    \n            />\n            <div \n                className={this.state.searchContainerClass}\n            >\n            \n                <FontAwesome name=\"search\" />\n                <input\n                    type=\"text\"\n                    className=\"search-input\"\n                    value={this.state.query}\n                    onChange={this.handleInputChange}\n                    placeholder=\"Search for Movies and TV Shows\"\n                    onFocus={this.handleFocusIn}\n                    onBlur={this.handleFocusOut}\n                    ref={input => input && input.focus()}\n                />\n            </div>\n            <div className=\"search-grid\">\n                {\n                    this.state.results.map(item => {\n                        if (item.media_type != \"person\") {\n                            return (\n                                <PosterCarouselItem \n                                    item={item}\n                                    key={item.id}\n                                    match={this.props.match}\n                                    media={item.media_type}\n                                    hideSearch={this.handleHide} \n                                />\n                            )\n                        }\n                    })\n                }\n            </div>\n          </div>\n        );\n    }\n}\n\nexport default Search;","import React, {PureComponent} from'react';\nimport FontAwesome from 'react-fontawesome';\nimport { Link } from 'react-router-dom';\n\n/*Comonents*/\nimport Search from './Search';\n\nclass Header extends PureComponent {\n    state = {\n        bg: {background: \"linear-gradient( transparent)\"},\n        searchVisible: false,\n        movieClass: \"navlink\",\n        tvClass: \"navlink\"\n    }\n    \n    /*Methods*/\n    listenScrollEvent = e => {\n        if (window.scrollY > 55) {\n          this.setState({bg: {backgroundColor: \"#181A1D\"}})\n        } else {\n          this.setState({bg: {background: \"linear-gradient( transparent)\"}})\n        }\n    }\n    \n    handleShowSearch = () => {\n        this.setState(prevState => ({\n            searchVisible: true    \n        }));\n        if (!this.state.searchVisible) {\n            \n        }\n    }\n    \n    handleHideSearch = () => {\n        this.setState(prevState => ({\n            searchVisible: false    \n        }));\n    }\n    \n    handleLinkClass=() => {\n        if (window.location.hash.split('/')[1] === \"movies\") {\n            this.setState({\n                movieClass: \"navlink active\",\n                tvClass: \"navlink\" \n            });\n        }\n        else if (window.location.hash.split('/')[1] === \"tv\") {\n            this.setState({\n                movieClass: \"navlink\",\n                tvClass: \"navlink active\" \n            });\n        }\n    }\n\n    /*Mount*/\n    componentDidMount = () => {\n        window.addEventListener('scroll', this.listenScrollEvent);\n        this.handleLinkClass();\n    }\n    \n    /*Update*/\n    componentDidUpdate = () => {\n        window.addEventListener('scroll', this.listenScrollEvent);\n        this.handleLinkClass();\n    }\n    \n    render() {\n        \n        return (\n            <div\n                className=\"header\"\n                style = {this.state.bg}\n            >\n                <Link to=\"/\"><h1 className=\"logo\">Movie<span className=\"white-text\">Night</span></h1></Link>\n                <div className=\"tabs\">\n                    <Link className={this.state.movieClass} to=\"/movies\"><h3>Movies</h3></Link>\n                    <Link className={this.state.tvClass} to=\"/tv\"><h3>TV Shows</h3></Link>\n                </div>\n                <div\n                    className=\"search-header\"\n                    onClick={this.handleShowSearch}\n                >\n                    <FontAwesome className=\"search-icon\" name='search' />\n                    <h3>Search</h3>\n                </div>\n                <Search\n                    searchVisible={this.state.searchVisible}\n                    hideSearch={this.handleHideSearch}\n                    match={this.props.match}\n                />\n            </div>\n        );   \n    }\n}\n\nexport default Header;","import React from 'react';\n\nconst Footer = () => {\n    return (\n        <div className=\"footer\">\n            <p>Website developed by Daniel Marchan</p>\n            <p>danielmarchan79@gmail.com</p>\n            <p>Powered by The Movie DB</p>\n            <a href=\"https://www.themoviedb.org/\">https://www.themoviedb.org</a>\n        </div>\n    );\n}\n\nexport default Footer;","import React, {PureComponent} from 'react';\n\n//Components\nimport PosterCarousel from './PosterCarousel';\nimport Trending from './Trending';\n\n\nclass Tv extends PureComponent {\n  \n  render() {\n    \n    const props = {\n      match: this.props.match,\n      media: \"tv\"\n    };\n    \n    return (\n    <div className=\"Tv\">\n      <Trending \n        endpoint=\"https://api.themoviedb.org/3/tv/popular?api_key=9512b36f031887e7c9ad226e2c26a6b2&language=en-US&page=1\"  \n        {...props}\n      />\n      \n      {/*TV On The Air*/}\n      <PosterCarousel\n          category=\"TV On The Air\"\n          endpoint='https://api.themoviedb.org/3/tv/on_the_air?api_key=9512b36f031887e7c9ad226e2c26a6b2&language=en-US&page=1'\n          {...props}\n      />\n      \n      {/*Top Rated*/}\n      <PosterCarousel\n          category=\"Top Rated\"\n          endpoint='https://api.themoviedb.org/3/tv/top_rated?api_key=9512b36f031887e7c9ad226e2c26a6b2&language=en-US&page=1'\n          {...props}\n      />\n      \n      {/*Comedies*/}\n      <PosterCarousel\n          category=\"Comedies\"\n          endpoint='https://api.themoviedb.org/3/discover/tv?api_key=9512b36f031887e7c9ad226e2c26a6b2&language=en-US&sort_by=popularity.desc&page=1&timezone=America%2FNew_York&with_genres=35&include_null_first_air_dates=false'\n          {...props}\n      />\n      \n      {/*Kid Shows*/}\n      <PosterCarousel\n          category=\"Kid Shows\"\n          endpoint='https://api.themoviedb.org/3/discover/tv?api_key=9512b36f031887e7c9ad226e2c26a6b2&language=en-US&sort_by=popularity.desc&page=1&timezone=America%2FNew_York&with_genres=10762&include_null_first_air_dates=false'\n          {...props}\n      />\n      \n      {/*Action & Adventure\"*/}\n      <PosterCarousel\n          category=\"Action & Adventure\"\n          endpoint='https://api.themoviedb.org/3/discover/tv?api_key=9512b36f031887e7c9ad226e2c26a6b2&language=en-US&sort_by=popularity.desc&page=1&timezone=America%2FNew_York&with_genres=10759&include_null_first_air_dates=false'\n          {...props}\n      />\n      \n      {/*Reality TV*/}\n      <PosterCarousel\n          category=\"Reality TV\"\n          endpoint='https://api.themoviedb.org/3/discover/tv?api_key=9512b36f031887e7c9ad226e2c26a6b2&language=en-US&sort_by=popularity.desc&page=1&timezone=America%2FNew_York&with_genres=10764&include_null_first_air_dates=false'\n          {...props}\n      />\n      \n      {/*Animated TV Shows*/}\n      <PosterCarousel\n          category=\"Animated TV Shows\"\n          endpoint='https://api.themoviedb.org/3/discover/tv?api_key=9512b36f031887e7c9ad226e2c26a6b2&language=en-US&sort_by=popularity.desc&page=1&timezone=America%2FNew_York&with_genres=16&include_null_first_air_dates=false'\n          {...props}\n      />\n      \n      {/*Crime*/}\n      <PosterCarousel\n          category=\"Crime\"\n          endpoint='https://api.themoviedb.org/3/discover/tv?api_key=9512b36f031887e7c9ad226e2c26a6b2&language=en-US&sort_by=popularity.desc&page=1&timezone=America%2FNew_York&with_genres=80&include_null_first_air_dates=false'\n          {...props}\n      />\n      \n      {/*Family Shows*/}\n      <PosterCarousel\n          category=\"Family Shows\"\n          endpoint='https://api.themoviedb.org/3/discover/tv?api_key=9512b36f031887e7c9ad226e2c26a6b2&language=en-US&sort_by=popularity.desc&page=1&timezone=America%2FNew_York&with_genres=10751&include_null_first_air_dates=false'\n          {...props}\n      />\n      \n    </div>\n    );\n  }\n  \n}\n\nexport default Tv;","import React from 'react';\nimport FontAwesome from 'react-fontawesome';\n\nconst TopCard = ({posterSrc, name, year, rating, genres, summary}) => {\n    return (\n        <div\n            className=\"top-card\"\n        >\n            <div className=\"grid-card\">\n                <div className=\"poster-div\">\n                    <img\n                        className=\"grid-poster\"\n                        src={posterSrc}\n                        alt={name}\n                    />\n                </div>\n                    <div>\n                    <div>\n                        <h1>{name}</h1>\n                    </div>\n                    <div>\n                        <h2>{ `(${year})` }</h2>\n                    </div>\n                    <div className=\"rating-div\">\n                        <FontAwesome name=\"star\" />\n                        <h3>{ `${rating} Average Rating` }</h3>\n                    </div>\n                    <div>\n                        <h3>{ genres }</h3>\n                    </div>\n                </div>\n            </div>\n        </div>    \n    );\n}\n\nexport default TopCard;","import React, { PureComponent } from \"react\";\nimport Slider from \"react-slick\";\nimport axios from 'axios';\n\n/*Components*/\nimport {NextArrow, PrevArrow} from './Arrows.js';\n\nclass TrailerCarousel extends PureComponent {\n    constructor() {\n        super();\n        this.state = {\n            data: [],\n            hover: false,\n            slides: this.handleCalculateSlides()\n        }\n    }\n    \n    //Methods\n    handleGetData = (endpoint) => {\n        \n        axios.get(endpoint)\n            .then(response => {\n                 this.setState({\n                    data: response.data.results\n                });\n            })\n            .catch(error => {\n              console.log('Error fetching and parsing data', error);\n            });\n            \n    }\n    \n    handleMouseHover = () => {\n      this.setState(prevState => ({\n          hover: !prevState.hover\n      }));\n    }\n    \n    handleCalculateSlides = () => {\n        \n        if (window.innerWidth <= 500) {\n            return 1;\n        }\n        else if (window.innerWidth <= 850) {\n            return 2;\n        }\n        else if (window.innerWidth <= 1200) {\n            return 3;\n        }\n        else {\n            return 4;\n        }\n    }\n    \n    handleUpdateSlides = () => {\n        this.setState({slides: this.handleCalculateSlides()});\n    }\n    \n    /*Mount*/\n    componentWillMount = () => {\n        window.addEventListener(\"resize\", this.handleUpdateSlides);\n        \n        this.handleGetData(this.props.endpoint);\n    }\n    \n    /*Update*/\n    componentDidUpdate = () => {\n        this.handleGetData(this.props.endpoint);\n    }\n    \n    render() {\n    /*Slider settings*/\n    const settings = {\n      dots: false,\n      infinite: false,\n      speed: 500,\n      slidesToShow: this.state.slides,\n      slidesToScroll: this.state.slides,\n      autoplay: false,\n      speed: 2500,\n      arrows: true,\n      nextArrow: <NextArrow hover={this.state.hover} />,\n      prevArrow: <PrevArrow hover={this.state.hover} />\n    };\n    \n    /*If no data is found, load empty div*/\n    if (this.state.data.length != 0) {\n        return (\n            <div className=\"trailer-carousel\">\n                <h1>Trailers</h1>\n                <div \n                    onMouseEnter={this.handleMouseHover}\n                    onMouseLeave={this.handleMouseHover}\n                    className=\"trailer-container\"\n                  >\n                    <Slider {...settings}>\n                        {\n                            this.state.data.map(item => {\n                            \n                                return(\n                                <div\n                                    key={item.id}\n                                    className=\"trailer-container\"\n                                >\n                                    <div className=\"trailer-item\">\n                                        <iframe src={`https://www.youtube.com/embed/${item.key}`} frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture; fullscreen;\" allowfullscreen></iframe>\n                                    </div>\n                                </div>\n                                );\n                            })\n                        }\n                    </Slider>\n                </div>\n            </div>\n        );\n    }\n    else {\n        return <div />\n    }\n  }\n}\n\nexport default TrailerCarousel;","import React, { PureComponent } from \"react\";\nimport Slider from \"react-slick\";\nimport {NextArrow, PrevArrow} from './Arrows.js';\nimport axios from 'axios';\n\nclass PersonCarousel extends PureComponent {\n     constructor() {\n        super();\n        this.state = {\n            data: [],\n            hover: false,\n            slides: this.handleCalculateSlides()\n        }\n    }\n    \n    //Methods\n    handleGetData = (endpoint) => {\n        axios.get(endpoint)\n            .then(response => {\n                 this.setState({\n                    data: response.data[this.props.people]\n                });\n            })\n            .catch(error => {\n              console.log('Error fetching and parsing data', error);\n            });\n            \n    }\n    \n    handleMouseHover = () => {\n      this.setState(prevState => (\n          this.state.hover = !prevState.hover\n      ));\n    }\n    \n    handleCalculateSlides = () => {\n        \n        if (window.innerWidth <= 650) {\n            return 3;\n        }\n        else if (window.innerWidth <= 850) {\n            return 4;\n        }\n        else if (window.innerWidth <= 1000) {\n            return 5;\n        }\n        else if (window.innerWidth <= 1250 ) {\n            return 6;\n        }\n        else if (window.innerWidth <= 1500) {\n            return 7;\n        }\n        else {\n            return 8;\n        }\n    }\n    \n    handleUpdateSlides = () => {\n        this.setState({slides: this.handleCalculateSlides()});\n    }\n    \n    /*Mount*/\n    componentDidMount = () => {\n        window.addEventListener(\"resize\", this.handleUpdateSlides);\n        \n        this.handleGetData(this.props.endpoint);\n    }\n    \n    /*Update*/\n    componentDidUpdate = () => {\n        this.handleGetData(this.props.endpoint);\n    }\n    \n    render() {\n        \n    /*Slider setiings*/\n    const settings = {\n      dots: false,\n      infinite: false,\n      speed: 500,\n      slidesToShow: this.state.slides,\n      slidesToScroll: this.state.slides,\n      autoplay: false,\n      speed: 2500,\n      arrows: true,\n      nextArrow: <NextArrow hover={this.state.hover} />,\n      prevArrow: <PrevArrow hover={this.state.hover} />\n    };\n    \n    /*If no data is found, render empty div*/\n    if (this.state.data.length != 0) {\n        return (\n            <div className=\"person-carousel\">\n                <h1>Cast</h1>\n                <div \n                    onMouseEnter={this.handleMouseHover}\n                    onMouseLeave={this.handleMouseHover}\n                    className=\"person-container\"\n                  >\n                    <Slider {...settings}>\n                        {\n                            this.state.data.map(item => {\n                            \n                                /*If image src is not found, use default image*/\n                                let profileSrc = \"https://m.media-amazon.com/images/G/01/imdb/images/nopicture/medium/name-2135195744._CB470041852_.png\";\n                                \n                                if (item.profile_path != null) {\n                                    profileSrc = `https://image.tmdb.org/t/p/w185${item.profile_path}`;\n                                }\n                            \n                                return(\n                                <div key={item.id} >\n                                    <div className=\"person-item\">\n                                        <img \n                                            src={profileSrc}\n                                            alt={item.name}\n                                        />\n                                        <div className=\"person-info\">\n                                            <h4>{item.name}</h4>\n                                            <p>{item.character}</p>\n                                        </div>\n                                    </div>\n                                </div>\n                                );\n                            })\n                        }\n                    </Slider>\n                </div>\n            </div>\n        );\n    }\n    else {\n        return <div />;\n    }\n  }\n}\n\nexport default PersonCarousel;","import React, {PureComponent} from 'react';\nimport axios from 'axios';\n\n/*Components*/\nimport TopCard from './TopCard';\nimport TrailerCarousel from './TrailerCarousel';\nimport PersonCarousel from './PersonCarousel';\nimport PosterCarousel from './PosterCarousel';\n\nclass MovieInfo extends PureComponent {\n    \n    state = {\n        movie: {},\n        name: \"\",\n        backdropSrc: () => (\"\"),\n        posterSrc: () => (\"\"),\n        year: \"\",\n        rating: \"\",\n        genres: \"\",\n        summary: \"\",\n        director: \"\",\n        producers: \"\",\n        writers: \"\"\n    }\n    \n    //Methods\n    handleGetData = () => {\n        axios.get(`https://api.themoviedb.org/3/movie/${this.props.match.params.id}?api_key=9512b36f031887e7c9ad226e2c26a6b2&language=en-US\n`)\n            .then(response => {\n                 this.handleSetMovie(response.data)\n            })\n            .catch(error => {\n              console.log('Error fetching and parsing data', error);\n            });\n            \n    }\n    \n    handleSetMovie = (movie) => {\n        this.setState({\n            movie: movie,\n            name: movie.title,\n            \n            /*If image is not found, return default*/\n            backdropSrc: () => {\n                    if (movie.backdrop_path === null) {\n                        return \"https://ak9.picdn.net/shutterstock/videos/14759539/thumb/1.jpg\";\n                    }\n                    else {\n                        return \"https://image.tmdb.org/t/p/w1280\" + movie.backdrop_path;\n                    }\n                },\n            posterSrc: () => {\n                    if (movie.poster_path === null) {\n                        return \"https://media.comicbook.com/files/img/default-movie.png\";\n                    }\n                    else {\n                        return \"https://image.tmdb.org/t/p/w185_and_h278_bestv2\" + movie.poster_path;\n                    }\n                },\n                \n            year: movie.release_date.substring(0, 4),\n            rating: movie.vote_average,\n            genres: movie.genres.map(genre => genre.name).join(', '),\n            summary: movie.overview\n        });\n    }\n    \n    someMethod =() => {\n        this.handleGetData();\n        \n        // Force a render without state change...\n        this.forceUpdate();\n        \n        console.log(\"done\");\n    }\n    \n    /*Mount*/\n    componentDidMount = () => {\n        this.handleGetData();\n    }\n    \n    /*Update*/\n    componentDidUpdate = () => {\n        this.handleGetData();\n    }\n    \n    render () {\n        return(\n            <div>\n            \n                {/*Backdrop*/}\n                <img \n                    className=\"info-image\"\n                    src={this.state.backdropSrc()}\n                    alt={this.state.name}\n                />\n                <div className=\"div-info\">\n                    {/*Top Card with Info*/}\n                    <TopCard \n                        posterSrc={this.state.posterSrc()}\n                        name={this.state.name}\n                        year={this.state.year}\n                        rating={this.state.rating}\n                        genres={this.state.genres}\n                        summary={this.state.summary}\n                    />\n                    \n                    {/*Summary*/}\n                    <div className=\"summary\">\n                        <h1>Summary</h1>\n                        <p>{ this.state.summary }</p>\n                    </div>\n                    \n                    {/*Cast*/}\n                    <PersonCarousel\n                        people=\"cast\"\n                        endpoint={`https://api.themoviedb.org/3/movie/${this.props.match.params.id}/credits?api_key=9512b36f031887e7c9ad226e2c26a6b2`}\n                    />\n                    \n                    {/*Trailers*/}\n                    <TrailerCarousel \n                        id={this.props.match.params.id}\n                        endpoint={`https://api.themoviedb.org/3/movie/${this.props.match.params.id}/videos?api_key=9512b36f031887e7c9ad226e2c26a6b2&language=en-US`}\n                    />\n                    \n                    {/*Similar Movies*/}\n                    <PosterCarousel \n                        category=\"Similar Movies\"\n                        endpoint={`https://api.themoviedb.org/3/movie/${this.props.match.params.id}/similar?api_key=9512b36f031887e7c9ad226e2c26a6b2&language=en-US&page=1`}\n                        media=\"movie\"\n                        match={this.props.match}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MovieInfo;","import React, {PureComponent} from 'react';\nimport axios from 'axios';\n\n/*Components*/\nimport TopCard from './TopCard';\nimport TrailerCarousel from './TrailerCarousel';\nimport PersonCarousel from './PersonCarousel';\nimport PosterCarousel from './PosterCarousel';\n\nclass TvInfo extends PureComponent {\n    \n    state = {\n        show: {},\n        name: \"\",\n        backdropSrc: () => (\"\"),\n        posterSrc: () => (\"\"),\n        year: \"\",\n        rating: \"\",\n        genres: \"\",\n        summary: \"\",\n        director: \"\",\n        producers: \"\",\n        writers: \"\"\n    }\n    \n    //Methods\n    handleGetData = () => {\n        axios.get(`https://api.themoviedb.org/3/tv/${this.props.match.params.id}?api_key=9512b36f031887e7c9ad226e2c26a6b2&language=en-US`)\n            .then(response => {\n                 this.handleSetShow(response.data)\n            })\n            .catch(error => {\n              console.log('Error fetching and parsing data', error);\n            });\n            \n    }\n    \n    handleSetShow = (show) => {\n        this.setState({\n            show: show,\n            name: show.name,\n            backdropSrc: () => {\n                    if (show.backdrop_path === null) {\n                        return \"https://ak9.picdn.net/shutterstock/videos/14759539/thumb/1.jpg\";\n                    }\n                    else {\n                        return \"https://image.tmdb.org/t/p/w1280\" + show.backdrop_path;\n                    }\n                },\n            posterSrc: () => {\n                    if (show.poster_path === null) {\n                        return \"https://media.comicbook.com/files/img/default-show.png\";\n                    }\n                    else {\n                        return \"https://image.tmdb.org/t/p/w185_and_h278_bestv2\" + show.poster_path;\n                    }\n                },\n            year: show.first_air_date.substring(0, 4),\n            rating: show.vote_average,\n            genres: show.genres.map(genre => genre.name).join(', '),\n            summary: show.overview\n        });\n    }\n    \n    /*Mount*/\n    componentWillMount = () => {\n        this.handleGetData();\n    }\n    \n    /*Update*/\n    componentDidUpdate = () => {\n        this.handleGetData();\n    }\n    \n    render () {\n        return(\n            <div>\n            \n                {/*Backdrop*/}\n                <img \n                    className=\"info-image\"\n                    src={this.state.backdropSrc()}\n                    alt={this.state.name}\n                />\n                <div className=\"div-info\">\n                    \n                    {/*Top Card with Info*/}\n                    <TopCard \n                        posterSrc={this.state.posterSrc()}\n                        name={this.state.name}\n                        year={this.state.year}\n                        rating={this.state.rating}\n                        genres={this.state.genres}\n                        summary={this.state.summary}\n                    />\n                    \n                    {/*Summary*/}\n                    <div className=\"summary\">\n                        <h1>Summary</h1>\n                        <p>{ this.state.summary }</p>\n                    </div>\n                    \n                    {/*Cast*/}\n                    <PersonCarousel\n                        people=\"cast\"\n                        endpoint={`https://api.themoviedb.org/3/movie/${this.props.match.params.id}/credits?api_key=9512b36f031887e7c9ad226e2c26a6b2`}\n                    />\n                    \n                    {/*Trailers*/}\n                    <TrailerCarousel \n                        id={this.props.match.params.id}\n                        endpoint={`https://api.themoviedb.org/3/tv/${this.props.match.params.id}/videos?api_key=9512b36f031887e7c9ad226e2c26a6b2&language=en-US`}\n                    />\n                    \n                    {/*Similar TV Shows*/}\n                    <PosterCarousel \n                        category=\"Similar TV Shows\"\n                        endpoint={`https://api.themoviedb.org/3/tv/${this.props.match.params.id}/similar?api_key=9512b36f031887e7c9ad226e2c26a6b2&language=en-US&page=1`}\n                        media=\"tv\"\n                        match={this.props.match}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TvInfo;","import React from 'react';\nimport FontAwesome from 'react-fontawesome';\n\nconst NotFound = () => {\n    return (\n        <div className=\"not-found\">\n            <FontAwesome name=\"exclamation\" className=\"not-found-icon\" />\n            <h1>Not Found</h1>\n        </div>  \n    );\n}\n\nexport default NotFound;\n","import React from 'react';\nimport '../App.css';\nimport {\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom';\n\n//Components\nimport Movies from './Movies';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Tv from './Tv';\nimport MovieInfo from './MovieInfo';\nimport TvInfo from './TvInfo';\nimport NotFound from './NotFound';\n\n\nconst App = () => {\n  return(\n    <div className=\"app\">\n    \n      <Header />\n        \n        {/*Routes*/}\n        <Switch>\n          <Route exact path=\"/\" render={() => <Redirect to=\"/movies\" />} />\n          <Route exact path=\"/movies\" component={Movies} />\n          <Route path=\"/movies/:id\" component={MovieInfo} />\n          <Route exact path=\"/tv\" component={Tv} />\n          <Route path=\"/tv/:id\" component={TvInfo} />\n          <Route component={NotFound} />\n        </Switch>\n      \n      <Footer />\n      \n    </div>\n  );  \n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\n\n/*Scroll to top on every route change*/\nclass ScrollToTop extends Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default withRouter(ScrollToTop);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from 'react-router-dom';\n\n/*Components*/\nimport App from './components/App';\nimport ScrollToTop from './components/ScrollToTop';\n\nReactDOM.render(\n    <HashRouter>\n        {/*Scroll to top when routing*/}\n        <ScrollToTop>\n            <App />\n        </ScrollToTop>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}