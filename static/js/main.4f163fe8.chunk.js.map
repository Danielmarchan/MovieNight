{"version":3,"sources":["components/Context/context.js","components/CarouselItem.js","components/Carousel.js","components/Explore.js","components/Header.js","components/Trending.js","components/App.js","serviceWorker.js","index.js"],"names":["MovieNightContext","React","createContext","Provider","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","handleGetData","component","endpoint","axios","get","then","response","setState","data","results","catch","error","console","log","inherits","createClass","key","value","react_default","a","createElement","actions","getData","props","children","Component","Consumer","CarouselItem","_ref","movie","className","src","poster_path","alt","title","Carousel","componentDidMount","assertThisInitialized","state","category","lib_default","initialSlide","dots","infinite","speed","slidesToShow","slidesToScroll","accesibility","adaptiveHeight","arrows","autoplay","centerPadding","cssEase","easing","edgeFriction","fade","focusOnSelect","swipe","map","components_CarouselItem","Explore","Fragment","components_Carousel","Header","Trending","_settings","settings","defineProperty","item","backdrop_path","original_title","library","add","faStroopwafel","App","context","components_Trending","components_Header","components_Explore","Boolean","window","location","hostname","match","ReactDOM","render","context_Provider","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uRAGMA,EAAoBC,IAAMC,gBAEnBC,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MAGIQ,cAAgB,SAACC,EAAWC,GAExBC,IAAMC,IAAIF,GACLG,KAAK,SAAAC,GACDL,EAAUM,SAAS,CAChBC,KAAMF,EAASE,KAAKC,YAG3BC,MAAM,SAAAC,GACLC,QAAQC,IAAI,kCAAmCF,MAZ7D1B,EAAA,OAAAC,OAAA4B,EAAA,EAAA5B,CAAAJ,EAAAC,GAAAG,OAAA6B,EAAA,EAAA7B,CAAAJ,EAAA,EAAAkC,IAAA,SAAAC,MAAA,WAkBQ,OACEC,EAAAC,EAAAC,cAACzC,EAAkBG,SAAnB,CAA4BmC,MAAO,CACjCI,QAAS,CACJC,QAASlC,KAAKY,iBAIpBZ,KAAKmC,MAAMC,cAzBtB1C,EAAA,CAA8B2C,aAgCjBC,EAAW/C,EAAkB+C,gBCvB3BC,EAZM,SAAAC,GAAa,IAAXC,EAAWD,EAAXC,MACnB,OACEX,EAAAC,EAAAC,cAAA,OAAKU,UAAU,iBACbZ,EAAAC,EAAAC,cAAA,OACIU,UAAU,SACVC,IAAK,kDAAoDF,EAAMG,YAC/DC,IAAKJ,EAAMK,0BCgDRC,qBAlDX,SAAAA,IAAc,IAAAlD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+C,IACVlD,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,KAAAF,OAAAU,EAAA,EAAAV,CAAAiD,GAAAtC,KAAAT,QAOJgD,kBAAoB,WAChBnD,EAAKsC,MAAMD,QAAXpC,OAAAmD,EAAA,EAAAnD,QAAAmD,EAAA,EAAAnD,CAAAD,IAAyBA,EAAKsC,MAAMrB,WAPpCjB,EAAKqD,MAAQ,CACX9B,KAAM,IAHEvB,wEAiCV,OACIiC,EAAAC,EAAAC,cAAA,OAAKU,UAAU,sBACXZ,EAAAC,EAAAC,cAAA,UAAKhC,KAAKmC,MAAMgB,UAChBrB,EAAAC,EAAAC,cAACoB,EAAArB,EAvBQ,CACfsB,aAAc,EACdC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,cAAc,EACdC,gBAAgB,EAChBC,QAAQ,EACRC,UAAS,EACTC,cAAe,OACfC,QAAS,OACTC,OAAQ,SACRC,aAAc,IACdC,MAAM,EACNC,eAAe,EACfC,OAAO,GAQOrE,KAAKkD,MAAM9B,KAAKkD,IAAI,SAAA7B,GAChB,OACIX,EAAAC,EAAAC,cAACuC,EAAD,CAAc9B,MAAOA,eAzC9BJ,cCyBRmC,EA3BC,SAAAhC,GAAiB,IAAdN,EAAcM,EAAdN,QACf,OACIJ,EAAAC,EAAAC,cAACF,EAAAC,EAAM0C,SAAP,KAEI3C,EAAAC,EAAAC,cAAC0C,EAAD,CACIvB,SAAS,cACTrC,SAAS,gHACToB,QAASA,IAIbJ,EAAAC,EAAAC,cAAC0C,EAAD,CACIvB,SAAS,YACTrC,SAAS,8GACToB,QAASA,IAIbJ,EAAAC,EAAAC,cAAC0C,EAAD,CACIvB,SAAS,kBACTrC,SAAS,6GACToB,QAASA,MClBVyC,EAJA,WACX,OAAO7C,EAAAC,EAAAC,cAAA,qBCoDI4C,cAlDX,SAAAA,IAAc,IAAA/E,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4E,IACV/E,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,KAAAF,OAAAU,EAAA,EAAAV,CAAA8E,GAAAnE,KAAAT,QAOJgD,kBAAoB,WAChBnD,EAAKsC,MAAMD,QAAXpC,OAAAmD,EAAA,EAAAnD,QAAAmD,EAAA,EAAAnD,CAAAD,IAAyB,8GAPzBA,EAAKqD,MAAQ,CACX9B,KAAM,IAHEvB,wEAYP,IAAAgF,EACDC,GAAQD,EAAA,CACZvB,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBI,UAAU,GANEhE,OAAAiF,EAAA,EAAAjF,CAAA+E,EAAA,QAOL,MAPK/E,OAAAiF,EAAA,EAAAjF,CAAA+E,EAAA,gBAQG,KARH/E,OAAAiF,EAAA,EAAAjF,CAAA+E,EAAA,UASJ,GATIA,GAWd,OACE/C,EAAAC,EAAAC,cAAA,OAAKU,UAAU,sBACbZ,EAAAC,EAAAC,cAACoB,EAAArB,EAAW+C,EAEJ9E,KAAKkD,MAAM9B,KAAKkD,IAAI,SAAAU,GAChB,OACIlD,EAAAC,EAAAC,cAAA,OAAKU,UAAU,iBACXZ,EAAAC,EAAAC,cAAA,OACIU,UAAU,iBACVC,IAAK,mCAAqCqC,EAAKC,cAC/CpC,IAAKmC,EAAKE,iBAEdpD,EAAAC,EAAAC,cAAA,OAAKU,UAAU,iBACXZ,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,UAAKgD,EAAKlC,oBAxCnBT,6BCavB8C,IAAQC,IAAIC,SAsBGC,mLAjBX,OACExD,EAAAC,EAAAC,cAACM,EAAD,KACI,SAAAiD,GACA,OACEzD,EAAAC,EAAAC,cAAA,OAAKU,UAAU,OACbZ,EAAAC,EAAAC,cAACwD,EAAD,CAAUtD,QAASqD,EAAQtD,QAAQC,UACnCJ,EAAAC,EAAAC,cAACyD,EAAD,MACA3D,EAAAC,EAAAC,cAAC0D,EAAD,CAASxD,QAASqD,EAAQtD,QAAQC,oBAV9BG,aCNEsD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACLnE,EAAAC,EAAAC,cAACkE,EAAD,KACIpE,EAAAC,EAAAC,cAACmE,EAAD,OAEJC,SAASC,eAAe,SDsHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvF,KAAK,SAAAwF,GACjCA,EAAaC","file":"static/js/main.4f163fe8.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n\nconst MovieNightContext = React.createContext();\n\nexport class Provider extends Component {\n    \n    //For this function to work, the component needs to pass \"this\" and an endpoint as an argument\n    handleGetData = (component, endpoint) => {\n        \n        axios.get(endpoint)\n            .then(response => {\n                 component.setState({\n                    data: response.data.results\n                });\n            })\n            .catch(error => {\n              console.log('Error fetching and parsing data', error);\n            });\n            \n    }\n    \n    render() {\n        return(\n          <MovieNightContext.Provider value={{\n            actions: {\n                 getData: this.handleGetData\n            }\n          }}>\n          \n          {this.props.children}\n          \n          </MovieNightContext.Provider>\n        );\n    }\n}\n\nexport const Consumer = MovieNightContext.Consumer;","import React from 'react';\n\nconst CarouselItem = ({movie}) => {\n    return (\n      <div className=\"carousel-item\">\n        <img \n            className=\"poster\"\n            src={\"https://image.tmdb.org/t/p/w185_and_h278_bestv2\" + movie.poster_path}\n            alt={movie.title}\n        />\n      </div>\n    );\n}\n\nexport default CarouselItem;","import React, {Component} from 'react';\nimport CarouselItem from './CarouselItem';\nimport Slider from \"react-slick\";\nimport {NextArrow, PrevArrow} from './Arrows.js';\n\nclass Carousel extends Component {\n    constructor() {\n        super();\n        this.state = {\n          data: []\n        }\n    }\n    \n    //Methods\n    componentDidMount = () => {\n        this.props.getData(this, this.props.endpoint);\n    }\n        \n    render() {\n        const settings = {\n          initialSlide: 0,\n          dots: false,\n          infinite: false,\n          speed: 500,\n          slidesToShow: 8,\n          slidesToScroll: 8,\n          accesibility: true,\n          adaptiveHeight: false,\n          arrows: true,\n          autoplay:false,\n          centerPadding: \"60px\",\n          cssEase: \"ease\",\n          easing: \"linear\",\n          edgeFriction: 0.35,\n          fade: false,\n          focusOnSelect: false,\n          swipe: true\n          \n        };\n        return (\n            <div className=\"carousel-container\">\n                <h2>{this.props.category}</h2>\n                <Slider {...settings}>\n                    {\n                        this.state.data.map(movie => {\n                            return(\n                                <CarouselItem movie={movie} />\n                            );\n                        })\n                    }\n                </Slider>\n              </div>\n        );\n    }\n}\n\nexport default Carousel;","import React from 'react';\nimport Carousel from './Carousel';\n\nconst Explore = ({ getData }) => {\n    return (\n        <React.Fragment>\n            {/*Now Playing*/}\n            <Carousel\n                category=\"Now Playing\"\n                endpoint='https://api.themoviedb.org/3/movie/now_playing?api_key=9512b36f031887e7c9ad226e2c26a6b2&language=en-US&page=1'\n                getData={getData}\n            />\n            \n            {/*Top Rated*/}\n            <Carousel\n                category=\"Top Rated\"\n                endpoint='https://api.themoviedb.org/3/movie/top_rated?api_key=9512b36f031887e7c9ad226e2c26a6b2&language=en-US&page=1'\n                getData={getData}\n            />\n            \n            {/*Upcoming Movies*/}\n            <Carousel\n                category=\"Upcoming Movies\"\n                endpoint='https://api.themoviedb.org/3/movie/upcoming?api_key=9512b36f031887e7c9ad226e2c26a6b2&language=en-US&page=1'\n                getData={getData}\n            />\n        </React.Fragment>\n    );\n} \n\nexport default Explore;","import React from'react';\n\nconst Header = () => {\n    return <div></div>;\n}\n\nexport default Header;","import React, { Component } from \"react\";\nimport Slider from \"react-slick\";\n\nclass Trending extends Component {\n    \n    constructor() {\n        super();\n        this.state = {\n          data: []\n        }\n    }\n    \n    //Methods\n    componentDidMount = () => {\n        this.props.getData(this, \"https://api.themoviedb.org/3/movie/popular?api_key=9512b36f031887e7c9ad226e2c26a6b2&language=en-US&page=1\");\n    }\n    \n  render() {\n    const settings = {\n      dots: true,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      autoplay: true,\n      speed: 2500,\n      autoplaySpeed: 5000,\n      arrows: false\n    };\n    return (\n      <div className=\"trending-container\">\n        <Slider {...settings}>\n            {\n                this.state.data.map(item => {\n                    return(\n                        <div className=\"trending-item\">\n                            <img \n                                className=\"trending-image\"\n                                src={\"https://image.tmdb.org/t/p/w1280\" + item.backdrop_path}\n                                alt={item.original_title}\n                            />\n                            <div className=\"trending-info\">\n                                <h3>Popular</h3>\n                                <h1>{item.title}</h1>\n                            </div>\n                        </div>\n                    );\n                })\n            }\n        </Slider>\n      </div>\n    );\n  }\n}\n\nexport default Trending;","import React, { Component } from 'react';\nimport '../App.css';\nimport axios from 'axios';\nimport { Consumer } from './Context/context.js';\n\n//Components\nimport Carousel from './Carousel';\nimport Explore from './Explore';\nimport Header from './Header';\nimport Trending from './Trending';\n\n//Font Awesome\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStroopwafel } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faStroopwafel);\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <Consumer>\n        { context => {\n          return (\n            <div className=\"App\">\n              <Trending getData={context.actions.getData} />\n              <Header />\n              <Explore getData={context.actions.getData} />\n            </div>\n          );\n      }}\n      </Consumer>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from './components/Context/context.js';\n\nReactDOM.render(\n    <Provider>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}